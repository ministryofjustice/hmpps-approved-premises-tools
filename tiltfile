docker_compose("./docker-compose.yml")

config.define_bool("local-api")
config.define_bool("local-ui")

cfg = config.parse()

local_api = cfg.get("local-api", False)
local_ui = cfg.get("local-ui", False)

resources = [
    "api",
    "frontend",
    "nomis-user-roles-api",
    "hmpps-manage-users-api",
    "hmpps-external-users-api",
    "auth-db",
    "hmpps-auth",
    "community-api",
    "hmpps-assess-risks-and-needs",
    "wiremock",
    "database",
    "prison-api",
    "redis",
    "hmpps-auth",
    "localstack",
]

if local_api:
    resources.remove("api")
    local_resource(
        "local_api",
        serve_cmd="./gradlew bootRunLocal",
        resource_deps=["database", "redis", "hmpps-auth", "approved-premises-and-delius"],
        serve_dir=os.getenv("LOCAL_CAS_API_PATH"),
        readiness_probe=probe(
            period_secs=15, http_get=http_get_action(port=8080, path="/health")
        ),
        serve_env={
            "SERVICES_AP-DELIUS-CONTEXT-API_BASE-URL": "http://localhost:8181"
        },
    )
    resources.append("local_api")
else:
    dc_resource(
        "api",
        resource_deps=["approved-premises-and-delius"]
    )

if local_ui:
    resources.remove("frontend")
    local_resource(
        "local_ui",
        cmd="npm install",
        serve_cmd="npm run start:dev",
        serve_dir=os.getenv("LOCAL_CAS_UI_PATH"),
        dir=os.getenv("LOCAL_CAS_UI_PATH"),
        resource_deps=["hmpps-auth"],
        readiness_probe=probe(
            period_secs=15, http_get=http_get_action(port=3000, path="/health")
        ),
        serve_env={
            "APPROVED_PREMISES_API_URL": "http://localhost:8080",
            "HMPPS_AUTH_URL": "http://localhost:9091/auth",
            "HMPPS_AUTH_EXTERNAL_URL": "http://localhost:9091/auth",
            "TOKEN_VERIFICATION_API_URL": "http://localhost:9091/verification",
            "PROVIDE_PERFORMANCE_HUB_REPORTS": "true",
        }
    )
    resources.append("local_ui")

local_resource(
    "approved-premises-and-delius",
    serve_cmd="./gradlew approved-premises-and-delius:bootRun",
    serve_dir= config.main_dir + "/hmpps-probation-integration-services",
    readiness_probe=probe(
        period_secs=5, http_get=http_get_action(port=8181, path="/health")
    ),
    serve_env={
        "SERVER_PORT": "8181",
        "SPRING_PROFILES_ACTIVE": "dev",
        "WIREMOCK_PORT": "7874",
        "INTEGRATIONS_APPROVED-PREMISES-API_URL": "http://localhost:8080",
        "LOGGING_LEVEL_UK_GOV_JUSTICE_DIGITAL_HMPPS": "DEBUG",
        "LOGGING_LEVEL_SECURITY_OAUTH2_CLIENT": "DEBUG",
        "LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY": "DEBUG",
        "SPRING_JPA_SHOW-SQL": "true",
        "OAUTH2_CLIENT-ID": "approved-premises-api",
        "OAUTH2_CLIENT-SECRET": "clientsecret",
        "SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_HMPPS-AUTH_TOKEN-URI": "http://localhost:9091/auth/oauth/token",
        "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI": "http://localhost:9091/auth/.well-known/jwks.json",
        "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI": "http://localhost:9091/auth/issuer"
    },
)

resources.append("approved-premises-and-delius")

config.clear_enabled_resources()
config.set_enabled_resources(resources)
