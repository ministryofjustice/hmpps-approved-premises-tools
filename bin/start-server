#!/usr/bin/env bash

set -e
# shellcheck disable=SC3040
set -o pipefail

cd "$(dirname "$0")"
script_dir="$(pwd)"

. "$script_dir"/utils/resolve_secrets.sh
. "$script_dir"/utils/override_ui_props_with_local_ui_props.sh

local_ui=0
local_api=0

while [ "$1" != "" ];
do
   case $1 in
    --local-ui)
        if [ -z "${LOCAL_CAS_UI_PATH}" ]; then
          echo "Path to local UI not found, please ensure you have set the LOCAL_CAS_UI_PATH environment variable and try again"
          exit 1
        fi
        local_ui=1
        ;;
    --local-api)
        if [ -z "${LOCAL_CAS_API_PATH}" ]; then
          echo "Path to local API not found, please ensure you have set the LOCAL_CAS_API_PATH environment variable and try again"
          exit 1
        fi
        local_api=1
        ;;
  esac
  shift
done

echo "Starting the Approved Premises Stack. This might take a moment. Logs available at http://localhost:10350"

api_secret_names=("hmpps-approved-premises-api")
resolve_secrets "$script_dir/../.env.api.template" \
                "$script_dir/../.env.api" \
                "hmpps-community-accommodation-dev" \
                "${api_secret_names[@]}"

ui_secret_names=("hmpps-approved-premises-ui")
resolve_secrets "$script_dir/../.env.ui.template" \
                "$script_dir/../.env.ui" \
                "hmpps-community-accommodation-dev" \
                "${ui_secret_names[@]}"

tiltArgs=""
if [ $local_api -gt 0 ]; then
  tiltArgs="$tiltArgs --local-api"
fi

if [ $local_ui -gt 0 ]; then
  override_ui_props_with_local_ui_props "$script_dir/../.env.ui"
  tiltArgs="$tiltArgs --local-ui"
fi

echo "==> Starting Tilt"
cmd="tilt up -f $script_dir/../tiltfile"
if [ ${#tiltArgs} -ge 0 ]; then
  cmd="$cmd -- $tiltArgs"
fi

echo "Starting tilt with $cmd"

$cmd 2>&1 >/dev/null &

echo "Waiting for approved-premises-api to be healthy"
until curl http://localhost:8080/api/health > /dev/null 2>&1; do
  printf '.'
  sleep 2
done

echo ""
echo "Stack running! You will be able to log into the application at http://localhost:3000"
echo ""
echo "See 1Password for login credentials"

exit 0
